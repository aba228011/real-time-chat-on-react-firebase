{"version":3,"sources":["utils/consts.js","components/Navbar.jsx","components/Login.jsx","components/common/Loader.jsx","routes.js","components/Chat.jsx","AppRouter.jsx","App.js","reportWebVitals.js","index.js"],"names":["LOGIN_ROUTE","CHAT_ROUTE","Navbar","auth","React","useContext","Context","useAuthState","user","AppBar","color","position","Toolbar","variant","photoURL","Grid","container","alignItems","justifyContent","Avatar","src","displayName","Button","onClick","signOut","to","Login","login","a","firebase","GoogleAuthProvider","provider","signInWithPopup","Container","style","height","window","innerHeight","width","background","direction","Box","p","Loader","className","publicRoutes","path","Component","privateRoutes","firestore","useState","value","setValue","useCollectionData","collection","orderBy","messages","loading","sendMessage","add","uid","text","createdAt","FieldValue","serverTimestamp","marginTop","border","overflowY","map","message","margin","marginLeft","padding","TextField","placeholder","size","onChange","e","target","onKeyDown","keyCode","AppRouter","route","component","exact","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createContext","ReactDOM","render","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.59606b96.chunk.js","sourcesContent":["export const LOGIN_ROUTE = '/login';\r\nexport const CHAT_ROUTE = '/chat';","import React from 'react';\r\nimport {AppBar, Avatar, Button, Grid, Toolbar} from \"@material-ui/core\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {LOGIN_ROUTE} from \"../utils/consts\";\r\nimport {Context} from \"../index\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\n\r\nconst Navbar = () => {\r\n    const {auth} = React.useContext(Context);\r\n    const [user] = useAuthState(auth);\r\n\r\n    return (\r\n        <AppBar color={\"default\"} position=\"static\">\r\n            <Toolbar variant={\"dense\"}>\r\n                {\r\n                    user?.photoURL ?\r\n                        <Grid container alignItems={\"center\"} justifyContent={\"space-between\"}>\r\n                            <div>\r\n                                <Avatar src={user.photoURL}/>\r\n                                <div>{user.displayName}</div>\r\n                            </div>\r\n                            <div>\r\n                                <Button onClick={() => auth.signOut()} variant={\"outlined\"}>Out</Button>\r\n                            </div>\r\n                        </Grid> :\r\n                        <Grid container justifyContent={\"flex-end\"}>\r\n                            <NavLink to={LOGIN_ROUTE}>\r\n                                <Button variant={\"outlined\"}>Login</Button>\r\n                            </NavLink>\r\n                        </Grid>\r\n                }\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport {Box, Button, Container, Grid} from \"@material-ui/core\";\r\nimport {Context} from \"../index\";\r\nimport firebase from \"firebase/app\";\r\n\r\nconst Login = () => {\r\n\r\n    const {auth} = React.useContext(Context)\r\n\r\n    const login = async () => {\r\n        const provider = await new firebase.auth.GoogleAuthProvider();\r\n        const {user} = await auth.signInWithPopup(provider);\r\n    }\r\n    return (\r\n        <Container>\r\n            <Grid container\r\n                  style={{height: window.innerHeight - 50}}\r\n                  alignItems={\"center\"}\r\n                  justifyContent={\"center\"}\r\n            >\r\n                <Grid container style={{\r\n                    width: 400,\r\n                    background: \"wheat\"\r\n                    }}\r\n                      alignItems={\"center\"}\r\n                      direction={\"column\"}\r\n                >\r\n                    <Box p={8}>\r\n                        <Button onClick={login} variant={\"outlined\"}>\r\n                            Login with Google\r\n                        </Button>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport {Container, Grid} from \"@material-ui/core\";\r\n\r\nconst Loader = () => {\r\n\r\n    return (\r\n        <Container>\r\n            <Grid container\r\n                  style={{height: window.innerHeight - 50}}\r\n                  alignItems={\"center\"}\r\n                  justifyContent={\"center\"}\r\n            >\r\n                <Grid container\r\n                      alignItems={\"center\"}\r\n                      direction={\"column\"}\r\n                >\r\n                    <div className=\"lds-roller\">\r\n                        <div/>\r\n                        <div/>\r\n                        <div/>\r\n                        <div/>\r\n                        <div/>\r\n                        <div/>\r\n                        <div/>\r\n                        <div/>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Loader;","import {CHAT_ROUTE, LOGIN_ROUTE} from \"./utils/consts\";\r\nimport Login from \"./components/Login\";\r\nimport Chat from \"./components/Chat\";\r\n\r\nexport const publicRoutes = [\r\n    {\r\n        path: LOGIN_ROUTE,\r\n        Component: Login\r\n    }\r\n]\r\nexport const privateRoutes = [\r\n    {\r\n        path: CHAT_ROUTE,\r\n        Component: Chat\r\n    }\r\n]","import React from 'react';\r\nimport {Context} from \"../index\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\nimport {Avatar, Button, Container, Grid, TextField} from \"@material-ui/core\";\r\nimport {useCollectionData} from \"react-firebase-hooks/firestore\";\r\nimport Loader from \"./common/Loader\";\r\nimport firebase from \"firebase/app\";\r\n\r\nconst Chat = () => {\r\n    const {auth, firestore} = React.useContext(Context);\r\n    const [user] = useAuthState(auth);\r\n    const [value, setValue] = React.useState(\"\")\r\n    const [messages, loading] = useCollectionData(\r\n        firestore.collection('messages').orderBy('createdAt')\r\n    )\r\n\r\n    const sendMessage = async () => {\r\n        firestore.collection('messages').add({\r\n            uid: user.uid,\r\n            displayName: user.displayName,\r\n            photoURL: user.photoURL,\r\n            text: value,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp()\r\n        })\r\n        setValue(\"\")\r\n    }\r\n    const keyPress = (e) => {\r\n        if (e.keyCode === 13) {\r\n            firestore.collection('messages').add({\r\n                uid: user.uid,\r\n                displayName: user.displayName,\r\n                photoURL: user.photoURL,\r\n                text: value,\r\n                createdAt: firebase.firestore.FieldValue.serverTimestamp()\r\n            })\r\n            setValue(\"\")\r\n        }\r\n    }\r\n\r\n    if (loading) {\r\n        return <Loader/>\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Grid container\r\n                  style={{height: window.innerHeight - 50, marginTop: 15}}\r\n                  justifyContent={\"center\"}>\r\n                <div style={{\r\n                    width: '80%',\r\n                    height: '70vh',\r\n                    border: '1px solid gray',\r\n                    overflowY: \"auto\"\r\n                }}>\r\n                    {\r\n                        messages.map(message =>\r\n                            <div style={{\r\n                                margin: 20,\r\n                                border: user.uid === message.uid ? \"1px solid black\" : \"1px solid yellow\",\r\n                                marginLeft: user.uid === message.uid ? \"auto\" : \"10px\",\r\n                                padding: 10,\r\n                                width: \"fit-content\"\r\n                            }}\r\n                                 key={message.createdAt}\r\n                            >\r\n                                <Grid container alignItems={\"center\"}>\r\n                                    <Avatar src={message.photoURL}/>\r\n                                    <div style={{marginLeft: 5, color: \"green\"}}><b>{message.displayName}</b></div>\r\n                                </Grid>\r\n                                <div style={{marginTop: 10}}>{message.text}</div>\r\n                            </div>)\r\n                    }\r\n\r\n\r\n                </div>\r\n                <Grid container style={{width: \"80%\"}} justifyContent={\"space-between\"}>\r\n                    <TextField\r\n                        variant={\"outlined\"}\r\n                        style={{width: \"80%\"}}\r\n                        placeholder={\"Your message after press Enter\"}\r\n                        size={\"medium\"}\r\n                        onChange={e => setValue(e.target.value)}\r\n                        value={value}\r\n                        onKeyDown={keyPress}\r\n                    />\r\n                    <Button\r\n                        variant={\"outlined\"}\r\n                        style={{width: \"15%\", height: '40px'}}\r\n                        color={\"default\"}\r\n                        onClick={sendMessage}\r\n                    >Send</Button>\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Chat;","import React from 'react';\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\nimport {privateRoutes, publicRoutes} from \"./routes\";\r\nimport {CHAT_ROUTE, LOGIN_ROUTE} from \"./utils/consts\";\r\nimport {Context} from \"./index\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\n\r\nconst AppRouter = () => {\r\n    const {auth} = React.useContext(Context);\r\n    const [user] = useAuthState(auth);\r\n\r\n    return user ?\r\n        (\r\n            <Switch>\r\n                {privateRoutes.map(route => <Route key={route.path} path={route.path} component={route.Component} exact={true}/>)}\r\n                <Redirect to={CHAT_ROUTE}/>\r\n            </Switch>\r\n        )\r\n        :\r\n        (\r\n            <Switch>\r\n                {publicRoutes.map(route => <Route key={route.path} path={route.path} component={route.Component} exact={true}/>)}\r\n                <Redirect to={LOGIN_ROUTE}/>\r\n            </Switch>\r\n        )\r\n}\r\n\r\nexport default AppRouter;","import './App.css';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport AppRouter from \"./AppRouter\";\r\nimport React from \"react\";\r\nimport {Context} from \"./index\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\nimport Loader from \"./components/common/Loader\";\r\n\r\nfunction App() {\r\n    const {auth} = React.useContext(Context);\r\n    const [user, loading] = useAuthState(auth);\r\n\r\n    if(loading){\r\n        return <Loader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <BrowserRouter>\r\n                <Navbar/>\r\n                <AppRouter/>\r\n            </BrowserRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, {createContext} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport firebase from \"firebase/app\";\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\n\r\nfirebase.initializeApp({\r\n    apiKey: \"AIzaSyANMkeV196q-XNfV8zxs382wh09qGfG1pc\",\r\n    authDomain: \"real-time-chat-on-react.firebaseapp.com\",\r\n    projectId: \"real-time-chat-on-react\",\r\n    storageBucket: \"real-time-chat-on-react.appspot.com\",\r\n    messagingSenderId: \"711584355310\",\r\n    appId: \"1:711584355310:web:41baf230682c12bdf434ff\",\r\n    measurementId: \"G-C6WN7CBFDY\"\r\n});\r\n\r\nexport const Context = createContext(null);\r\n\r\nconst auth = firebase.auth();\r\nconst firestore = firebase.firestore();\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Context.Provider value={{\r\n          firebase, auth, firestore\r\n      }}>\r\n          <App />\r\n      </Context.Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}